import time  # Biblioteca para manipula칞칚o de tempo
import logging  # Biblioteca para gera칞칚o de logs
import random  # Biblioteca para gerar valores aleat칩rios

# 游늷 Configura칞칚o do logger
logging.basicConfig(
    level=logging.INFO,  # Define o n칤vel m칤nimo de log como INFO
    format="%(asctime)s - %(levelname)s - %(message)s"  # Formato do log: timestamp, n칤vel e mensagem
)

# 游늷 Lista de mensagens aleat칩rias para simular eventos de logs
messages = [
    "User logged in",
    "Data processed",
    "Error occurred",
    "Transaction completed",
    "Service started"
]

# 游늷 Loop infinito que gera logs aleat칩rios continuamente
while True:
    log_level = random.choice([logging.INFO, logging.WARNING, logging.ERROR])  # Escolhe um n칤vel de log aleat칩rio
    message = random.choice(messages)  # Escolhe uma mensagem aleat칩ria
    logging.log(log_level, message)  # Registra o log com o n칤vel e mensagem escolhidos
    time.sleep(random.randint(1, 5))  # Aguarda um tempo aleat칩rio entre 1 a 5 segundos antes de gerar o pr칩ximo log
