# ðŸ“Œ Cria uma ServiceAccount para o CronJob que monitora os logs e reinicia o Fluent Bit, caso necessÃ¡rio.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentbit-check-sa  # Nome da ServiceAccount
  namespace: default  # Define que essa ServiceAccount serÃ¡ criada no namespace 'default'

---
# ðŸ“Œ Cria uma Role que define as permissÃµes que a ServiceAccount pode executar no cluster.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fluentbit-check-role  # Nome da Role que define as permissÃµes do CronJob
  namespace: default  # Aplica a Role no namespace 'default'
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]  # Permite acesso aos Deployments
    verbs: ["get", "list", "update", "patch"]  # Permite visualizar, listar e reiniciar os deployments (rollout restart)

  - apiGroups: [""]
    resources: ["pods"]  # Permite acesso aos Pods
    verbs: ["get", "list"]  # Permite visualizar e listar os pods (para verificar status)

---
# ðŸ“Œ Cria um RoleBinding que associa a ServiceAccount `fluentbit-check-sa` Ã  Role `fluentbit-check-role`
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fluentbit-check-rolebinding  # Nome do RoleBinding
  namespace: default  # Aplica a associaÃ§Ã£o no namespace 'default'
subjects:
  - kind: ServiceAccount
    name: fluentbit-check-sa  # Associa essa ServiceAccount Ã s permissÃµes definidas na Role
    namespace: default  # Confirma que estÃ¡ no mesmo namespace 'default'
roleRef:
  kind: Role
  name: fluentbit-check-role  # Nome da Role que serÃ¡ aplicada Ã  ServiceAccount
  apiGroup: rbac.authorization.k8s.io  # Define que essa Role pertence ao grupo RBAC do Kubernetes
